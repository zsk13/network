<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="network.dao.RollcallDao" >
  <resultMap id="BaseResultMap" type="network.model.Rollcall" >
    <id column="rc_id" property="rcId" jdbcType="BIGINT" />
    <result column="u_id" property="uId" jdbcType="BIGINT" />
    <result column="r_id" property="rId" jdbcType="BIGINT" />
    <result column="location_x" property="locationX" jdbcType="DOUBLE" />
    <result column="location_y" property="locationY" jdbcType="DOUBLE" />
    <result column="location_name" property="locationName" jdbcType="VARCHAR" />
    <result column="r_time" property="rTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="RollcallDisplayMap" type="network.model.RollcallDisplay" >
    <result column="sno" property="studentNumber" jdbcType="VARCHAR" />
    <result column="pname" property="personName" jdbcType="VARCHAR" />
    <result column="cname" property="className" jdbcType="VARCHAR" />
    <result column="rname" property="registrationName" jdbcType="VARCHAR" />
    <result column="lname" property="locationName" jdbcType="VARCHAR" />
    <result column="rtime" property="rollcallTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rc_id, u_id, r_id, location_x, location_y, location_name, r_time
  </sql>
  
  <select id="getAllRollcallDisplays" resultMap="RollcallDisplayMap" >
  	SELECT users.sno AS sno, users.name AS pname, registration.class_name AS cname, registration.name AS rname, rollcall.location_name AS lname, rollcall.r_time AS rtime
  	FROM rollcall,users, registration
  	WHERE rollcall.r_id = registration.r_id
  		AND rollcall.u_id = users.u_id
  </select>
  <select id="getAllRollcallDisplaysByRegistrationId" resultMap="RollcallDisplayMap" parameterType="java.lang.Long">
  	SELECT users.sno AS sno, users.name AS pname, registration.class_name AS cname, registration.name AS rname, rollcall.location_name AS lname, rollcall.r_time AS rtime
  	FROM rollcall,users, registration
  	WHERE registration.r_id = #{r_id, jdbcType=BIGINT }
  		AND rollcall.r_id = registration.r_id
  		AND rollcall.u_id = users.u_id
  </select>
  <select id="getAll" resultMap = "BaseResultMap" >
  	SELECT
  	<include refid="Base_Column_List"/>
  	FROM rollcall
  </select>
  <select id="getByRegistrationId" resultMap = "BaseResultMap" parameterType="java.lang.Long" >
  	SELECT
  	<include refid="Base_Column_List"/>
  	FROM rollcall WHERE r_id = #{r_id, jdbcType=BIGINT}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="network.model.RollcallExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rollcall
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rollcall
    where rc_id = #{rcId,jdbcType=BIGINT}
  </select>
  <select id="check" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from rollcall
    where u_id = #{uId,jdbcType=BIGINT} and r_id= #{rId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rollcall
    where rc_id = #{rcId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="network.model.RollcallExample" >
    delete from rollcall
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="network.model.Rollcall" >
    insert into rollcall (rc_id, u_id, r_id, 
      location_x, location_y, location_name, 
      r_time)
    values (#{rcId,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{rId,jdbcType=BIGINT}, 
      #{locationX,jdbcType=DOUBLE}, #{locationY,jdbcType=DOUBLE}, #{locationName,jdbcType=VARCHAR}, 
      #{rTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="network.model.Rollcall" >
    insert into rollcall
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rcId != null" >
        rc_id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="rId != null" >
        r_id,
      </if>
      <if test="locationX != null" >
        location_x,
      </if>
      <if test="locationY != null" >
        location_y,
      </if>
      <if test="locationName != null" >
        location_name,
      </if>
      <if test="rTime != null" >
        r_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rcId != null" >
        #{rcId,jdbcType=BIGINT},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=BIGINT},
      </if>
      <if test="locationX != null" >
        #{locationX,jdbcType=DOUBLE},
      </if>
      <if test="locationY != null" >
        #{locationY,jdbcType=DOUBLE},
      </if>
      <if test="locationName != null" >
        #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="rTime != null" >
        #{rTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="network.model.RollcallExample" resultType="java.lang.Integer" >
    select count(*) from rollcall
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rollcall
    <set >
      <if test="record.rcId != null" >
        rc_id = #{record.rcId,jdbcType=BIGINT},
      </if>
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.rId != null" >
        r_id = #{record.rId,jdbcType=BIGINT},
      </if>
      <if test="record.locationX != null" >
        location_x = #{record.locationX,jdbcType=DOUBLE},
      </if>
      <if test="record.locationY != null" >
        location_y = #{record.locationY,jdbcType=DOUBLE},
      </if>
      <if test="record.locationName != null" >
        location_name = #{record.locationName,jdbcType=VARCHAR},
      </if>
      <if test="record.rTime != null" >
        r_time = #{record.rTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rollcall
    set rc_id = #{record.rcId,jdbcType=BIGINT},
      u_id = #{record.uId,jdbcType=BIGINT},
      r_id = #{record.rId,jdbcType=BIGINT},
      location_x = #{record.locationX,jdbcType=DOUBLE},
      location_y = #{record.locationY,jdbcType=DOUBLE},
      location_name = #{record.locationName,jdbcType=VARCHAR},
      r_time = #{record.rTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="network.model.Rollcall" >
    update rollcall
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="rId != null" >
        r_id = #{rId,jdbcType=BIGINT},
      </if>
      <if test="locationX != null" >
        location_x = #{locationX,jdbcType=DOUBLE},
      </if>
      <if test="locationY != null" >
        location_y = #{locationY,jdbcType=DOUBLE},
      </if>
      <if test="locationName != null" >
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="rTime != null" >
        r_time = #{rTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where rc_id = #{rcId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="network.model.Rollcall" >
    update rollcall
    set u_id = #{uId,jdbcType=BIGINT},
      r_id = #{rId,jdbcType=BIGINT},
      location_x = #{locationX,jdbcType=DOUBLE},
      location_y = #{locationY,jdbcType=DOUBLE},
      location_name = #{locationName,jdbcType=VARCHAR},
      r_time = #{rTime,jdbcType=TIMESTAMP}
    where rc_id = #{rcId,jdbcType=BIGINT}
  </update>
</mapper>